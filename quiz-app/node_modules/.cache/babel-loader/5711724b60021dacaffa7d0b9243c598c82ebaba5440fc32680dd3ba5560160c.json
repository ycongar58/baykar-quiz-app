{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yusuf\\\\source\\\\repos\\\\baykar-quiz-app\\\\quiz-app\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Paper } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPaper = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  ...theme.typography.body2,\n  textAlign: 'center',\n  margin: 15\n}));\n_c = QuizPaper;\nconst ResultPaper = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  ...theme.typography.body2,\n  textAlign: 'start',\n  margin: 15\n}));\n_c2 = ResultPaper;\nfunction Quiz() {\n  _s();\n  var _questions$currentQue;\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [isEnabled, setEnabled] = useState(false);\n  const countFetched = 10;\n  const countdownDuration = 10;\n  const [countdown, setCountdown] = useState(countdownDuration);\n  const [totalQuestions, setTotalQuestions] = useState(countFetched);\n  useEffect(() => {\n    // Hier die Funktion zum Laden der Fragen\n    async function fetchQuestions() {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n        const data = await response.json();\n        const slicedData = data.slice(0, countFetched); // WÃ¤hle die ersten 10 Fragen aus dem API-Daten\n        const formattedQuestions = slicedData.map(question => ({\n          title: question.body,\n          options: [`A) ${question.body.split(\" \")[0]}`, `B) ${question.body.split(\" \")[1]}`, `C) ${question.body.split(\" \")[2]}`, `D) ${question.body.split(\" \")[3]}`],\n          // Beispieloptionen\n          correctAnswer: `C) ${question.body.split(\" \")[2]}` // Beispiel korrekte Antwort\n        }));\n        setTotalQuestions(formattedQuestions.length);\n        setQuestions(formattedQuestions);\n      } catch (error) {\n        console.error('Fetch error:', error);\n      }\n    }\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    if (countdown > 0) {\n      const timer = setTimeout(() => {\n        setCountdown(countdown - 1);\n        if (countdown - 1 <= 20) {\n          setEnabled(true);\n        }\n      }, 1000);\n      return () => clearTimeout(timer);\n    } else {\n      setEnabled(false);\n      if (questions[currentQuestionIndex] !== undefined) setUserAnswers([...userAnswers, {\n        question: questions[currentQuestionIndex].title,\n        answer: 'No Selection',\n        correctAnswer: questions[currentQuestionIndex].correctAnswer\n      }]);\n      handleNextQuestion();\n    }\n  }, [countdown]);\n  const handleOptionClick = selectedOption => {\n    //if (countdown <= 20) {\n    const selectedAnswer = questions[currentQuestionIndex].options[selectedOption];\n    setUserAnswers([...userAnswers, {\n      question: questions[currentQuestionIndex].title,\n      answer: selectedAnswer,\n      correctAnswer: questions[currentQuestionIndex].correctAnswer\n    }]);\n    setEnabled(false);\n    handleNextQuestion();\n    //}\n  };\n  const handleNextQuestion = () => {\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    setCountdown(countdownDuration);\n    if (currentQuestionIndex + 1 === questions.length) {\n      setShowResult(true);\n    }\n  };\n  const renderOptions = () => {\n    if (currentQuestionIndex < questions.length) {\n      return questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => handleOptionClick(index),\n        disabled: !isEnabled,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this));\n    }\n  };\n  const renderResult = () => {\n    return /*#__PURE__*/_jsxDEV(ResultPaper, {\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Your Answers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Correct Answers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: userAnswers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: answer.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: answer.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: answer.correctAnswer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showResult ? renderResult() : /*#__PURE__*/_jsxDEV(QuizPaper, {\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        children: [(_questions$currentQue = questions[currentQuestionIndex]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.title, \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Countdown: \", countdown]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Question: \", currentQuestionIndex + 1, \"/\", totalQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"IV+I7nX4ANtmFa4FWdt+XDZW61o=\");\n_c3 = Quiz;\nexport default Quiz;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"QuizPaper\");\n$RefreshReg$(_c2, \"ResultPaper\");\n$RefreshReg$(_c3, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Button","Paper","styled","jsxDEV","_jsxDEV","QuizPaper","theme","padding","spacing","typography","body2","textAlign","margin","_c","ResultPaper","_c2","Quiz","_s","_questions$currentQue","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","userAnswers","setUserAnswers","showResult","setShowResult","isEnabled","setEnabled","countFetched","countdownDuration","countdown","setCountdown","totalQuestions","setTotalQuestions","fetchQuestions","response","fetch","data","json","slicedData","slice","formattedQuestions","map","question","title","body","options","split","correctAnswer","length","error","console","timer","setTimeout","clearTimeout","undefined","answer","handleNextQuestion","handleOptionClick","selectedOption","selectedAnswer","renderOptions","option","index","variant","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","renderResult","elevation","_c3","$RefreshReg$"],"sources":["C:/Users/yusuf/source/repos/baykar-quiz-app/quiz-app/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {Button, Paper} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nconst QuizPaper = styled(Paper)(({ theme }) => ({\r\n    padding: theme.spacing(2),\r\n    ...theme.typography.body2,\r\n    textAlign: 'center',\r\n    margin: 15,\r\n  }));\r\nconst ResultPaper = styled(Paper)(({ theme }) => ({\r\n    padding: theme.spacing(2),\r\n    ...theme.typography.body2,\r\n    textAlign: 'start',\r\n    margin: 15,\r\n  }));\r\nfunction Quiz() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  \r\n  const [showResult, setShowResult] = useState(false);\r\n  const [isEnabled, setEnabled] = useState(false);\r\n  const countFetched = 10;\r\n  const countdownDuration = 10;\r\n  const [countdown, setCountdown] = useState(countdownDuration);\r\n  const [totalQuestions, setTotalQuestions] = useState(countFetched);\r\n\r\n  useEffect(() => {\r\n    // Hier die Funktion zum Laden der Fragen\r\n    async function fetchQuestions() {\r\n      try {\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n        const data = await response.json();\r\n        const slicedData = data.slice(0, countFetched); // WÃ¤hle die ersten 10 Fragen aus dem API-Daten\r\n        const formattedQuestions = slicedData.map(question => ({\r\n          title: question.body,\r\n          options: [`A) ${question.body.split(\" \")[0]}`, `B) ${question.body.split(\" \")[1]}`, `C) ${question.body.split(\" \")[2]}`, `D) ${question.body.split(\" \")[3]}`], // Beispieloptionen\r\n          correctAnswer: `C) ${question.body.split(\" \")[2]}` // Beispiel korrekte Antwort\r\n        }));\r\n        setTotalQuestions(formattedQuestions.length);\r\n        setQuestions(formattedQuestions);\r\n      } catch (error) {\r\n        console.error('Fetch error:', error);\r\n      }\r\n    }\r\n\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (countdown > 0) {\r\n        const timer = setTimeout(() => {\r\n            setCountdown(countdown - 1);\r\n            if((countdown - 1) <= 20){\r\n                setEnabled(true);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timer);\r\n    } else {\r\n        setEnabled(false);\r\n        if(questions[currentQuestionIndex] !== undefined)\r\n          setUserAnswers([...userAnswers, { question: questions[currentQuestionIndex].title, answer: 'No Selection', correctAnswer: questions[currentQuestionIndex].correctAnswer}])\r\n        handleNextQuestion();\r\n    }\r\n  }, [countdown]);\r\n\r\n  const handleOptionClick = (selectedOption) => {\r\n    //if (countdown <= 20) {\r\n      const selectedAnswer = questions[currentQuestionIndex].options[selectedOption];\r\n      setUserAnswers([...userAnswers, { question: questions[currentQuestionIndex].title, answer: selectedAnswer, correctAnswer: questions[currentQuestionIndex].correctAnswer}]);\r\n      setEnabled(false);\r\n      handleNextQuestion();\r\n    //}\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    setCountdown(countdownDuration);\r\n    if (currentQuestionIndex + 1 === questions.length) {\r\n      setShowResult(true);\r\n    }\r\n  };\r\n\r\n  const renderOptions = () => {\r\n    if (currentQuestionIndex < questions.length) {\r\n      return questions[currentQuestionIndex].options.map((option, index) => (\r\n        <Button variant=\"outlined\" key={index} onClick={() => handleOptionClick(index)} disabled={!isEnabled}>\r\n          {option}\r\n        </Button>\r\n      ));\r\n    }\r\n  };\r\n\r\n  const renderResult = () => {\r\n    return (\r\n      <ResultPaper  elevation={3}>\r\n        <h2>Result</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Questions</th>\r\n              <th>Your Answers</th>\r\n              <th>Correct Answers</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {userAnswers.map((answer, index) => (\r\n              <tr key={index}>\r\n                <td>{answer.question}</td>\r\n                <td>{answer.answer}</td>\r\n                <td>{answer.correctAnswer}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        </ResultPaper>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showResult ? (\r\n        renderResult()\r\n      ) : (\r\n        <QuizPaper  elevation={3}>\r\n          <a>{questions[currentQuestionIndex]?.title}?</a>\r\n          <div>Countdown: {countdown}</div>\r\n          <div>Question: {currentQuestionIndex+1}/{totalQuestions}</div>\r\n          <div>{renderOptions()}</div>\r\n        </QuizPaper>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}