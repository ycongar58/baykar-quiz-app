{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yusuf\\\\source\\\\repos\\\\baykar\\\\quiz-app\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  var _questions$currentQue;\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [countdown, setCountdown] = useState(30);\n  const [showResult, setShowResult] = useState(false);\n  const [isEnabled, setEnabled] = useState(false);\n  useEffect(() => {\n    // Hier die Funktion zum Laden der Fragen\n    async function fetchQuestions() {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n        const data = await response.json();\n        const slicedData = data.slice(0, 10); // Wähle die ersten 10 Fragen aus dem API-Daten\n        const formattedQuestions = slicedData.map(question => ({\n          title: question.body,\n          options: [`A) ${question.body.split(\" \")[0]}`, `B) ${question.body.split(\" \")[1]}`, `C) ${question.body.split(\" \")[2]}`, `D) ${question.body.split(\" \")[3]}`],\n          // Beispieloptionen\n          correctAnswer: `C) ${question.body.split(\" \")[2]}` // Beispiel korrekte Antwort\n        }));\n        setQuestions(formattedQuestions);\n      } catch (error) {\n        console.error('Fetch error:', error);\n      }\n    }\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    if (countdown > 0) {\n      const timer = setTimeout(() => {\n        setCountdown(countdown - 1);\n      }, 1000);\n      return () => clearTimeout(timer);\n    } else {\n      handleNextQuestion();\n    }\n  }, [countdown]);\n  const handleOptionClick = selectedOption => {\n    if (countdown <= 20) {\n      const selectedAnswer = questions[currentQuestionIndex].options[selectedOption];\n      setUserAnswers([...userAnswers, {\n        question: questions[currentQuestionIndex].title,\n        answer: selectedAnswer\n      }]);\n      handleNextQuestion();\n    }\n  };\n  const handleNextQuestion = () => {\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    setCountdown(30);\n    if (currentQuestionIndex + 1 === questions.length) {\n      setShowResult(true);\n    }\n  };\n  const renderOptions = () => {\n    if (currentQuestionIndex < questions.length) {\n      return questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => handleOptionClick(index),\n        disabled: isEnabled,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this));\n    }\n  };\n  const renderResult = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Answers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: userAnswers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: answer.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: answer.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showResult ? renderResult() : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: (_questions$currentQue = questions[currentQuestionIndex]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Countdown: \", countdown]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"OEQLfydjzxgjA4eGuSmo4856Zgk=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Button","jsxDEV","_jsxDEV","Quiz","_s","_questions$currentQue","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","userAnswers","setUserAnswers","countdown","setCountdown","showResult","setShowResult","isEnabled","setEnabled","fetchQuestions","response","fetch","data","json","slicedData","slice","formattedQuestions","map","question","title","body","options","split","correctAnswer","error","console","timer","setTimeout","clearTimeout","handleNextQuestion","handleOptionClick","selectedOption","selectedAnswer","answer","length","renderOptions","option","index","variant","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","renderResult","_c","$RefreshReg$"],"sources":["C:/Users/yusuf/source/repos/baykar/quiz-app/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\nfunction Quiz() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [countdown, setCountdown] = useState(30);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [isEnabled, setEnabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Hier die Funktion zum Laden der Fragen\r\n    async function fetchQuestions() {\r\n      try {\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n        const data = await response.json();\r\n        const slicedData = data.slice(0, 10); // Wähle die ersten 10 Fragen aus dem API-Daten\r\n        const formattedQuestions = slicedData.map(question => ({\r\n          title: question.body,\r\n          options: [`A) ${question.body.split(\" \")[0]}`, `B) ${question.body.split(\" \")[1]}`, `C) ${question.body.split(\" \")[2]}`, `D) ${question.body.split(\" \")[3]}`], // Beispieloptionen\r\n          correctAnswer: `C) ${question.body.split(\" \")[2]}` // Beispiel korrekte Antwort\r\n        }));\r\n        setQuestions(formattedQuestions);\r\n      } catch (error) {\r\n        console.error('Fetch error:', error);\r\n      }\r\n    }\r\n\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (countdown > 0) {\r\n      const timer = setTimeout(() => {\r\n        setCountdown(countdown - 1);\r\n      }, 1000);\r\n\r\n      return () => clearTimeout(timer);\r\n    } else {\r\n      handleNextQuestion();\r\n    }\r\n  }, [countdown]);\r\n\r\n  const handleOptionClick = (selectedOption) => {\r\n    if (countdown <= 20) {\r\n      const selectedAnswer = questions[currentQuestionIndex].options[selectedOption];\r\n      setUserAnswers([...userAnswers, { question: questions[currentQuestionIndex].title, answer: selectedAnswer }]);\r\n      handleNextQuestion();\r\n    }\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    setCountdown(30);\r\n    if (currentQuestionIndex + 1 === questions.length) {\r\n      setShowResult(true);\r\n    }\r\n  };\r\n\r\n  const renderOptions = () => {\r\n    if (currentQuestionIndex < questions.length) {\r\n      return questions[currentQuestionIndex].options.map((option, index) => (\r\n        <Button variant=\"outlined\" key={index} onClick={() => handleOptionClick(index)} disabled={isEnabled}>\r\n          {option}\r\n        </Button>\r\n      ));\r\n    }\r\n  };\r\n\r\n  const renderResult = () => {\r\n    return (\r\n      <div>\r\n        <h2>Result</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Questions</th>\r\n              <th>Answers</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {userAnswers.map((answer, index) => (\r\n              <tr key={index}>\r\n                <td>{answer.question}</td>\r\n                <td>{answer.answer}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showResult ? (\r\n        renderResult()\r\n      ) : (\r\n        <div>\r\n          <h2>{questions[currentQuestionIndex]?.title}</h2>\r\n          <div>Countdown: {countdown}</div>\r\n          <div>{renderOptions()}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}